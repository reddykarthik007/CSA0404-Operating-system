import socket
import threading

def handle_client(client_socket, addr):
    print(f"Accepted connection from {addr}")
    while True:
        try:
            data = client_socket.recv(1024)
            if not data:
                print(f"Connection closed by {addr}")
                break
            print(f"Received message from {addr}: {data.decode()}")
            # Broadcast message to all clients
            for c in clients:
                c.send(data)
        except Exception as e:
            print(f"Error handling connection from {addr}: {e}")
            break
    client_socket.close()

def start_server():
    global clients
    host = "127.0.0.1"
    port = 5555

    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server_socket.bind((host, port))
    server_socket.listen(5)

    print(f"Server started on {host}:{port}")

    clients = []

    while True:
        client_socket, addr = server_socket.accept()
        clients.append(client_socket)
        client_thread = threading.Thread(target=handle_client, args=(client_socket, addr))
        client_thread.start()

    server_socket.close()

if _name_ == "_main_":
    start_server()
    return 0
